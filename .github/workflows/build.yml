name: React Native CI/CD

on:
  - pull_request
  - workflow_call

permissions:
  contents: read
  pull-requests: read

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  build-and-deploy:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm add -g eas-cli@latest

      - name: 📱 Setup EAS build cache
        uses: actions/cache@v4
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: 🔄 Verify EAS CLI installation
        run: |
          echo "EAS CLI version:"
          eas --version

      - name: 📋 Fix package.json main entry
        run: |
          if ! command -v jq &> /dev/null; then
            echo "Installing jq..."
            sudo apt-get update && sudo apt-get install -y jq
          fi

          if [ -f ./packages/app/package.json ]; then
            cp packages/app/package.json packages/app/package.json.bak
            jq '.main = "node_modules/expo/AppEntry.js"' packages/app/package.json > packages/app/package.json.tmp && mv packages/app/package.json.tmp packages/app/package.json
            echo "Updated package.json main entry"
            cat packages/app/package.json | grep "main"
          else
            echo "packages/app/package.json not found"
            exit 1
          fi

      - name: 📋 Update metro.config.js for SVG support
        run: |
          if [ -f ./packages/app/metro.config.js ]; then
            echo "Creating backup of metro.config.js"
            cp ./packages/app/metro.config.js ./packages/app/metro.config.js.backup
            echo "Updating metro.config.js to CommonJS format"
            cat > ./packages/app/metro.config.js << 'EOFMARKER'
          /* eslint-disable @typescript-eslint/no-var-requires */
          const { getDefaultConfig } = require('expo/metro-config');

          const config = getDefaultConfig(__dirname);

          const { transformer, resolver } = config;

          config.transformer = {
            ...transformer,
            babelTransformerPath: require.resolve('react-native-svg-transformer/expo'),
          };

          config.resolver = {
            ...resolver,
            assetExts: resolver.assetExts.filter(ext => ext !== 'svg'),
            sourceExts: [...resolver.sourceExts, 'svg'],
          };

          module.exports = config;
          EOFMARKER
            echo "metro.config.js updated to CommonJS format"
          else
            echo "packages/app/metro.config.js not found"
          fi

      - name: 📱 Build Development APK
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          cd packages/app
          eas build --platform android --profile development --local --non-interactive --output=../../app-dev.apk
        env:
          NODE_ENV: development

      - name: ✅ Build successful
        run: |
          echo "🎉 Build completed successfully!"
          echo " APK generated: ./app-dev.apk"
          echo "✅ All validation and build steps passed"
